# This example demonstrates the use of a git repo as a hard-wired input artifact.
# The argo repo is cloned to its target destination at '/src' for the main container to consume.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: flow-tf-minio-baseline
spec:
  entrypoint: exec
  arguments:
    parameters:
    - name: revision
      value: master
    - name: action
      value: "run-all apply"
    - name: path
      value: ./src/applications/minio/configuration/baseline

  templates:
  - name: exec
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "argo-workflows"
        vault.hashicorp.com/agent-inject-token: "true"
    inputs:
      parameters:
        - name: revision
        - name: action
        - name: path
      artifacts:
      - name: argo-source
        path: "/src"
        git:
          repo: "https://github.com/nolte/k8s-home-lab.git"
          revision: "{{inputs.parameters.revision}}"
    script:
      image: alpine/terragrunt:1.2.3
      command: [bash]
      workingDir: "/src"
      source: |
        #!/usr/bin/env bash
        set -o errexit
        set -o pipefail
        set -o nounset

        cd {{inputs.parameters.path}}
        export VAULT_TOKEN=$(cat /vault/secrets/token)
        terragrunt {{inputs.parameters.action}} -input=false -auto-approve -no-color

      envFrom:
        - configMapRef:
            name: tf-static-endpoints
        - configMapRef:
            name: tf-static-minio-endpoints
      env:
        #- name: VAULT_TOKEN
        #  value:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds-secret
              key: accesskey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds-secret
              key: secretkey
        - name: KUBE_IN_CLUSTER_CONFIG
          value: "true"
#    outputs:
#      artifacts:
#        - name: terraform-plan
#          path: /tmp/tf-outputs/
