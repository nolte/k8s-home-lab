# This example demonstrates the use of a git repo as a hard-wired input artifact.
# The argo repo is cloned to its target destination at '/src' for the main container to consume.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: flow-tf-vault-baseline
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}
    helm.sh/chart: {{ include "vault.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  entrypoint: exec
  arguments:
    parameters:
    - name: revision
      value: "master" #master
    - name: action
      value: apply
    - name: path
      value: ./src/applications/vault/configuration/baseline

  templates:  
  - name: exec
    inputs:
      parameters:
      - name: revision
        default: "master" #master
      - name: action
        default: apply
      - name: path
        default: ./src/applications/vault/configuration/baseline
      artifacts:
      - name: argo-source
        path: "/src"
        git:
          repo: "https://github.com/nolte/argo-charts.git"
          revision: "{{ "{{" }}inputs.parameters.revision{{ "}}" }}"
    script:
      image: alpine/terragrunt
      command: [bash]
      workingDir: "/src"
      source: |
        #!/usr/bin/env bash
        set -o errexit
        set -o pipefail
        set -o nounset
        
        cd {{ "{{" }}inputs.parameters.path{{ "}}" }}
        
        terragrunt {{ "{{" }}inputs.parameters.action{{ "}}" }} -input=false -auto-approve -no-color -compact-warnings

      env:
        - name: VAULT_ADDR
          value: {{ tpl .Values.address . }}
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-initial-keys
              key: root_token
        - name: KUBE_IN_CLUSTER_CONFIG
          value: "true"